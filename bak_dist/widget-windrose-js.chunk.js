(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["widget-windrose-js"],{

/***/ "./src/js/locale-date.js":
/*!*******************************!*\
  !*** ./src/js/locale-date.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @author Oscar Fonts <oscar.fonts@geomati.co>\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./i18n */ \"./src/js/i18n.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(i18n) {\n    \"use strict\";\n\n    var date = {\n        utc: false,\n        locale: navigator.language || navigator.browserLanguage\n    };\n\n    return {\n        display: function(d) {\n            if (!d) {\n                return i18n.t(\"(no date)\");\n            }\n            if (date.utc) {\n                return d.toLocaleString(date.locale, {\n                    timeZone: \"UTC\"\n                }) + \" UTC\";\n            } else {\n                return d.toLocaleString(date.locale);\n            }\n        },\n        locale: function(l) {\n            if (l) {\n                date.locale = l;\n            }\n            return date.locale;\n        },\n        utc: function(u) {\n            if (typeof u !== 'undefined') {\n                date.utc = u;\n            }\n            return date.utc;\n        }\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./src/js/locale-date.js?");

/***/ }),

/***/ "./src/js/sos-data-access.js":
/*!***********************************!*\
  !*** ./src/js/sos-data-access.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @author Oscar Fonts <oscar.fonts@geomati.co>\n */\n !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./SOS */ \"./src/js/SOS.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(SOS) {\n    \"use strict\";\n\n    var propertyNames = {};\n    var waitingDescribeResponse = {};\n    var propertyCallbackQueue = {};\n\n\treturn function(config, redraw, errorHandler) {\n        SOS.setUrl(config.service);\n\n        function read() {\n            var offering = config.offering;\n            var features = config.feature ? [config.feature] : isArray(config.features) ? config.features : config.features ? JSON.parse(config.features) : undefined;\n            var properties = config.property ? [config.property] : isArray(config.properties) ? config.properties : config.properties ? JSON.parse(config.properties) : undefined;\n            var time = (config.time_start && config.time_end) ? [config.time_start, config.time_end] : \"latest\";\n            SOS.getObservation(offering, features, properties, time, parse, errorHandler);\n        }\n\n        function isArray(obj) {\n            return Object.prototype.toString.call(obj) === '[object Array]';\n        }\n\n        function parse(observations) {\n            if (!observations.length) {\n                redraw([]);\n            }\n\n            // Get tabular data from observations\n            var data = [];\n            for (var i in observations) {\n                var observation = observations[i];\n                getPropertyName(observation.procedure, observation.observableProperty, addObservation, observation);\n            }\n\n            function addObservation(property, observation) {\n                var foi = observation.featureOfInterest;\n                data.push({\n                    time: new Date(observation.resultTime),\n                    value: observation.result.hasOwnProperty(\"value\") ? observation.result.value : observation.result,\n                    feature: foi.name ? foi.name.value : (foi.identifier ? foi.identifier.value : foi),\n                    property: property,\n                    uom: observation.result.hasOwnProperty(\"uom\") ? observation.result.uom : \"(N/A)\"\n                });\n                if (data.length == observations.length) {\n                    redraw(data);\n                }\n            }\n        }\n\n        function getPropertyName(procedure, id, callback, context) {\n            if (!propertyNames[procedure]) {\n                // Queue callback call\n                if (!propertyCallbackQueue[procedure]) {\n                    propertyCallbackQueue[procedure] = [];\n                }\n\n                propertyCallbackQueue[procedure].push({\n                    callback: callback,\n                    id: id,\n                    context: context\n                });\n\n                if (!waitingDescribeResponse[procedure]) {\n                    waitingDescribeResponse[procedure] = true;\n                    // Trigger a DescribeSensor, cache all property names for this procedure\n                    SOS.describeSensor(procedure, function(description) {\n                        var properties = description.hasOwnProperty(\"ProcessModel\") ? description.ProcessModel.outputs.OutputList.output : description.System.outputs.OutputList.output;\n                        properties = properties instanceof Array ? properties : [properties];\n                        var types = [\"Quantity\", \"Count\", \"Boolean\", \"Category\", \"Text\", \"ObservableProperty\"];\n\n                        var names = [];\n                        for (var i in properties) {\n                            var property = properties[i];\n                            for (var j in types) {\n                                var type = types[j];\n                                if (property.hasOwnProperty(type)) {\n                                    property.id = property[type].definition;\n                                }\n                            }\n                            names[property.id] = property.name;\n                        }\n                        propertyNames[procedure] = names;\n\n                        // Clear propertyCallbackQueue\n                        while (propertyCallbackQueue[procedure].length) {\n                            var elem = propertyCallbackQueue[procedure].shift();\n                            elem.callback.call(undefined, propertyNames[procedure][elem.id], elem.context);\n                        }\n                    }, errorHandler);\n                }\n            } else {\n                callback(propertyNames[procedure][id], context);\n            }\n        }\n\n        return {\n            read: read\n        };\n\t};\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./src/js/sos-data-access.js?");

/***/ }),

/***/ "./src/js/widget-common.js":
/*!*********************************!*\
  !*** ./src/js/widget-common.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @author Mart√≠ Pericay <marti@pericay.com>\n * @author Oscar Fonts <oscar.fonts@geomati.co>\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./locale-date */ \"./src/js/locale-date.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(ld) {\n    \"use strict\";\n\n    function loadCSS(url) {\n        var link = document.createElement(\"link\");\n        link.setAttribute(\"rel\", \"stylesheet\");\n        link.setAttribute(\"type\", \"text/css\");\n        link.setAttribute(\"href\", url);\n        if (typeof link != \"undefined\") {\n            document.getElementsByTagName(\"head\")[0].appendChild(link);\n        }\n    }\n\n    return {\n        inputs: [\"service\", \"offering\"],\n        optional_inputs: [\"footnote\", \"custom_css_url\", \"display_utc_times\"],\n\n        init: function(config, el) {\n            if (config.custom_css_url !== undefined) {\n                loadCSS(config.custom_css_url);\n            }\n            if (config.footnote !== undefined && el.querySelector(\".footnote\")) {\n                el.querySelector(\".footnote\").innerHTML = config.footnote;\n            }\n            if(config.display_utc_times) {\n                ld.utc(true);\n            }\n        }\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./src/js/widget-common.js?");

/***/ }),

/***/ "./src/js/widget/windrose.js":
/*!***********************************!*\
  !*** ./src/js/widget/windrose.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @author Oscar Fonts <oscar.fonts@geomati.co>\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ../sos-data-access */ \"./src/js/sos-data-access.js\"), __webpack_require__(/*! ../widget-common */ \"./src/js/widget-common.js\"), __webpack_require__(/*! highcharts/highcharts-more */ \"./node_modules/highcharts/highcharts-more.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(data_access, common) {\n    \"use strict\";\n\n    var labels = [\"&gt; 10 m/s\", \"8-10 m/s\", \"6-8 m/s\", \"4-6 m/s\", \"2-4 m/s\", \"0-2 m/s\"];\n\n    return {\n        inputs: common.inputs.concat([\"feature\", \"properties\", \"time_start\", \"time_end\", \"refresh_interval\", \"title\"]),\n        optional_inputs: [\"subtitle\"].concat(common.optional_inputs),\n        preferredSizes: [{w: 620, h: 450}],\n\n        init: function(config, el, errorHandler) {\n            // Main div\n            var main_div = document.createElement(\"div\");\n            main_div.className = \"windrose widget\";\n\n            // Chart div\n            var chart = document.createElement(\"div\"); \n            main_div.appendChild(chart);\n\n            // Add footnote element\n            var footnote_div = document.createElement(\"div\");\n            var footnote_span = document.createElement(\"span\");\n            footnote_span.className = \"footnote\";\n            footnote_div.appendChild(footnote_span);\n            main_div.appendChild(footnote_div);\n\n            el.appendChild(main_div);\n\n            //load widget common features\n            common.init(config, el, errorHandler);\n        \t\n            // Setup SOS data access\n            var data = data_access(config, redraw);\n            var refreshIntervalId = setInterval(data.read, config.refresh_interval * 1000);\n            data.read();\n\n            function redraw(data) {\n                var arr = [];\n                for (var i in data) {\n                    var measure = data[i];\n\n                    // Build a sparse array where index is timestamp, and member is a 2-element array\n                    // First element is wind speed, second element is wind direction\n                    var timestamp = measure.time.getTime();\n                    var magnitude = measure.uom == \"deg\" ? 1 : 0;\n\n                    if (!arr[timestamp]) {\n                        arr[timestamp] = [];\n                    }\n                    arr[timestamp][magnitude] = measure.value;\n                }\n\n                // Build a matrix where first index is speed range, and second is direction\n                var slots = [];\n                while (slots.length < 6) {\n                    var dirs = [];\n                    while (dirs.push(null) < 16);\n                    slots.push(dirs);\n                }\n\n                // Sum the number of observations for each speed+direction slot\n                var n = 0;\n                for (i in arr) {\n                    var values = arr[i];\n                    if (values.length == 2) {\n                        var speed = 5 - Math.min(Math.floor(values[0] / 2), 5); // Speed slot - from 0 to 5\n                        var direction = Math.round(values[1] / 22.5) % 16; // Direction slot - from 0 to 15\n                        if (!slots[speed][direction]) {\n                            slots[speed][direction] = 1;\n                        } else {\n                            slots[speed][direction]++;\n                        }\n                        n++;\n                    }\n                }\n\n                // Convert from sample count to percentage\n                // Generate legend\n                var series = [];\n                for (i in slots) {\n                    var total = 0;\n                    for (var j in slots[i]) {\n                        slots[i][j] = slots[i][j] * 100 / n;\n                        total += slots[i][j];\n                    }\n                    series.push({\n                        name: labels[i] + \" (\" + Math.round(total) + \"%)\",\n                        data: slots[i]\n                    });\n                }\n\n                // Finally, generate the chart\n                new Highcharts.Chart({\n                    chart: {\n                        type: 'column',\n                        polar: true,\n                        renderTo: chart\n                    },\n                    title: {\n                        text: config.title\n                    },\n                    subtitle: {\n                        text: config.subtitle\n                    },\n                    pane: {\n                        size: '85%'\n                    },\n                    legend: {\n                        align: 'right',\n                        verticalAlign: 'top',\n                        y: 100,\n                        layout: 'vertical'\n                    },\n                    xAxis: {\n                        tickmarkPlacement: 'on',\n                        categories: ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW']\n                    },\n                    yAxis: {\n                        min: 0,\n                        endOnTick: false,\n                        showLastLabel: true,\n                        labels: {\n                            formatter: function() {\n                                return this.value + ' %';\n                            }\n                        }\n                    },\n                    tooltip: {\n                        formatter: function() {\n                            return '<span style=\"color:' + this.series.color + '\">\\u25CF</span> ' + this.series.name + ': <b>' + Highcharts.numberFormat(this.y, 1) + ' %</b><br/>';\n                        }\n                    },\n                    plotOptions: {\n                        series: {\n                            stacking: 'normal',\n                            shadow: false,\n                            groupPadding: 0,\n                            pointPlacement: 'on'\n                        }\n                    },\n                    colors: ['#BD0BC9', '#C9170B', '#C9760B', '#BDC90B', '#0BC917', '#0BBDC9'],\n                    series: series\n                });\n\n            }\n\n            return {\n                destroy: function() {\n                    clearInterval(refreshIntervalId);\n                }\n            };\n        }\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./src/js/widget/windrose.js?");

/***/ })

}]);