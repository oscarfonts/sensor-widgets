(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["widget-map-js"],{

/***/ "./src/js/locale-date.js":
/*!*******************************!*\
  !*** ./src/js/locale-date.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @author Oscar Fonts <oscar.fonts@geomati.co>\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./i18n */ \"./src/js/i18n.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(i18n) {\n    \"use strict\";\n\n    var date = {\n        utc: false,\n        locale: navigator.language || navigator.browserLanguage\n    };\n\n    return {\n        display: function(d) {\n            if (!d) {\n                return i18n.t(\"(no date)\");\n            }\n            if (date.utc) {\n                return d.toLocaleString(date.locale, {\n                    timeZone: \"UTC\"\n                }) + \" UTC\";\n            } else {\n                return d.toLocaleString(date.locale);\n            }\n        },\n        locale: function(l) {\n            if (l) {\n                date.locale = l;\n            }\n            return date.locale;\n        },\n        utc: function(u) {\n            if (typeof u !== 'undefined') {\n                date.utc = u;\n            }\n            return date.utc;\n        }\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./src/js/locale-date.js?");

/***/ }),

/***/ "./src/js/widget-common.js":
/*!*********************************!*\
  !*** ./src/js/widget-common.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @author Mart√≠ Pericay <marti@pericay.com>\n * @author Oscar Fonts <oscar.fonts@geomati.co>\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./locale-date */ \"./src/js/locale-date.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(ld) {\n    \"use strict\";\n\n    function loadCSS(url) {\n        var link = document.createElement(\"link\");\n        link.setAttribute(\"rel\", \"stylesheet\");\n        link.setAttribute(\"type\", \"text/css\");\n        link.setAttribute(\"href\", url);\n        if (typeof link != \"undefined\") {\n            document.getElementsByTagName(\"head\")[0].appendChild(link);\n        }\n    }\n\n    return {\n        inputs: [\"service\", \"offering\"],\n        optional_inputs: [\"footnote\", \"custom_css_url\", \"display_utc_times\"],\n\n        init: function(config, el) {\n            if (config.custom_css_url !== undefined) {\n                loadCSS(config.custom_css_url);\n            }\n            if (config.footnote !== undefined && el.querySelector(\".footnote\")) {\n                el.querySelector(\".footnote\").innerHTML = config.footnote;\n            }\n            if(config.display_utc_times) {\n                ld.utc(true);\n            }\n        }\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./src/js/widget-common.js?");

/***/ }),

/***/ "./src/js/widget/map.js":
/*!******************************!*\
  !*** ./src/js/widget/map.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _SensorWidget__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../SensorWidget */ \"./src/js/SensorWidget.js\");\n/* harmony import */ var _i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../i18n */ \"./src/js/i18n.js\");\n/* harmony import */ var _i18n__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_i18n__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _SOS__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SOS */ \"./src/js/SOS.js\");\n/* harmony import */ var _SOS__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_SOS__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! leaflet */ \"./node_modules/leaflet/dist/leaflet-src.js\");\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(leaflet__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _widget_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../widget-common */ \"./src/js/widget-common.js\");\n/* harmony import */ var _widget_common__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_widget_common__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var leaflet_markercluster__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! leaflet.markercluster */ \"./node_modules/leaflet.markercluster/dist/leaflet.markercluster-src.js\");\n/* harmony import */ var leaflet_markercluster__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(leaflet_markercluster__WEBPACK_IMPORTED_MODULE_5__);\n/**\n * @author Oscar Fonts <oscar.fonts@geomati.co>\n */\n\n\n\n\n\n\n    \"use strict\";\n\n    // Overriding Leaflet.label so it accepts a DOM element as argument\n    // (not only a string). Needed for async loading of content to label\n    /*\n    L.Label.prototype._updateContent = function() {\n        if (!this._content || !this._map || this._prevContent === this._content) {\n            return;\n        }\n\n        if (typeof this._content === 'string') {\n            this._container.innerHTML = this._content;\n        } else {\n            while (this._container.hasChildNodes()) {\n                this._container.removeChild(this._container.firstChild);\n            }\n            this._container.appendChild(this._content);\n        }\n        this._prevContent = this._content;\n        this._labelWidth = this._container.offsetWidth;\n    };\n    */\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    inputs: _widget_common__WEBPACK_IMPORTED_MODULE_4___default.a.inputs.concat([\"features\", \"properties\"]),\n    optional_inputs: [\"permanent_tooltips\", \"popup_widget\", \"no_clustering\", \"swap_axis\", \"max_initial_zoom\", \"base_layer\"].concat(_widget_common__WEBPACK_IMPORTED_MODULE_4___default.a.optional_inputs),\n    preferredSizes: [{w: 550, h: 400}],\n\n    init: function(config, el, errorHandler) {\n\n        el.innerHTML = _i18n__WEBPACK_IMPORTED_MODULE_1___default.a.t(\"Loading...\");\n        //load widget common features\n        _widget_common__WEBPACK_IMPORTED_MODULE_4___default.a.init(config, el);\n\n        var baseLayer;\n        if (config.base_layer) {\n            var params = (typeof config.base_layer == 'string' || config.base_layer instanceof String) ? JSON.parse(config.base_layer) : config.base_layer;\n            if (params.type && params.type.toUpperCase() === 'WMS') {\n                // WMS Layer\n                baseLayer = leaflet__WEBPACK_IMPORTED_MODULE_3___default.a.tileLayer.wms(params.url, params.options);\n            } else {\n                // XYZ TileLayer\n                baseLayer = leaflet__WEBPACK_IMPORTED_MODULE_3___default.a.tileLayer(params.url, params.options);\n            }\n        } else {\n            // A default base layer, taken from http://leaflet-extras.github.io/leaflet-providers/preview/\n            baseLayer =  leaflet__WEBPACK_IMPORTED_MODULE_3___default.a.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png', {\n                attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>',\n                subdomains: 'abcd',\n                maxZoom: 19\n            });\n        }\n\n        // Add footnote to attribution string\n        if (config.footnote) {\n            baseLayer.options.attribution += \" | <b>\" + config.footnote + \"</b>\";\n        }\n\n        // Parse popup configuration\n        if (typeof config.popup_widget === 'string' || config.popup_widget instanceof String) {\n            config.popup_widget = JSON.parse(config.popup_widget);\n        }\n\n        _SOS__WEBPACK_IMPORTED_MODULE_2___default.a.setUrl(config.service);\n        read();\n\n        function read() {\n            _SOS__WEBPACK_IMPORTED_MODULE_2___default.a.getCapabilities(function(offerings) {\n                for (var i in offerings) {\n                    var offering = offerings[i];\n                    if (offering.identifier == config.offering) {\n                        _SOS__WEBPACK_IMPORTED_MODULE_2___default.a.getFeatureOfInterest(offering.procedure[0], addFoIs, errorHandler);\n                    }\n                }\n                function addFoIs(features) {\n                    // Map div\n                    el.innerHTML=\"\";\n                    var map_div = document.createElement(\"div\");\n                    map_div.className = \"map widget\";\n                    el.appendChild(map_div);\n\n                    var map = leaflet__WEBPACK_IMPORTED_MODULE_3___default.a.map(map_div, {\n                        layers: [baseLayer]\n                    }).setView([0, 0], 2);\n\n                    // Clustering\n                    var featureContainer;\n                    if (config.no_clustering) {\n                        featureContainer = map;\n                    } else {\n                        featureContainer = leaflet__WEBPACK_IMPORTED_MODULE_3___default.a.markerClusterGroup({\n                            showCoverageOnHover: false,\n                            maxClusterRadius: 50\n                        });\n                        map.addLayer(featureContainer);\n                    }\n\n                    var geojson = leaflet__WEBPACK_IMPORTED_MODULE_3___default.a.geoJson(fois2geojson(features),{\n                        onEachFeature: function(feature, layer) {\n                            // OnClick event\n                            if(config.on_click) {\n                                layer.on('click', function(e) {\n                                    config.on_click(e.target);\n                                });\n                            }\n\n                            // Tooltip (label)\n                            /*\n                            var labelElement = document.createElement('div');\n                            labelElement.id = 'map-tooltip-' + feature.id;\n                            labelElement.appendChild(document.createTextNode(feature.properties.name));\n                            layer.bindLabel(labelElement, {noHide: true}).addTo(featureContainer);\n                            if (config.properties && config.properties != \"[]\" && config.properties.length) {\n                                new SensorWidget('panel', {\n                                    \"service\": config.service,\n                                    \"offering\": config.offering,\n                                    \"feature\": feature.id,\n                                    \"properties\": config.properties,\n                                    \"refresh_interval\": \"60\",\n                                    \"title\": feature.properties.name\n                                }, labelElement);\n                            }\n                            if (!config.permanent_tooltips && layer.setLabelNoHide) {\n                                layer.setLabelNoHide(false);\n                            }\n                            */\n\n                            // Info bubble (popup)\n                            if (config.popup_widget) {\n                                var el_popup = document.createElement(\"div\");\n                                var widget_config = JSON.parse(JSON.stringify(config.popup_widget));\n                                var name = widget_config.name;\n                                delete widget_config.name;\n                                widget_config.service = config.service;\n                                widget_config.offering = config.offering;\n                                new _SensorWidget__WEBPACK_IMPORTED_MODULE_0__[\"default\"](name).inspect(function(inputs, optionals, sizes){\n                                    if(inputs.indexOf('feature') != -1) {\n                                        widget_config.feature = feature.id;\n                                    } else if(inputs.indexOf('features') != -1) {\n                                        widget_config.features = [feature.id];\n                                    }\n                                    layer.bindPopup(el_popup, {\n                                        minWidth:  sizes[0].w,\n                                        minHeight: sizes[0].h\n                                    });\n                                    el_popup.setAttribute(\"style\",\"width:\" + sizes[0].w + \"px;height:\" + sizes[0].h + \"px;\");\n                                    new _SensorWidget__WEBPACK_IMPORTED_MODULE_0__[\"default\"](name, widget_config, el_popup);\n                                });\n                            }\n                        }\n                    });\n                    map.fitBounds(geojson.getBounds(), {\n                        maxZoom: config.max_initial_zoom ? parseInt(config.max_initial_zoom) : 14\n                    });\n                }\n            }, errorHandler);\n        }\n\n        function isArray(obj) {\n            return Object.prototype.toString.call(obj) === '[object Array]';\n        }\n\n        function isInArray(value, array) {\n            return array.indexOf(value) > -1;\n        }\n\n        function swap_axis(geometry) {\n            var ret = [];\n            for (var i=0; i < geometry.length; i++) {\n                if(isArray(geometry[i])) {\n                    ret[i]=swap_axis(geometry[i]);\n                } else if(!i%2) {\n                    ret[i]=geometry[i+1];\n                    ret[i+1]=geometry[i];\n                }\n            }\n            return ret;\n        }\n\n        function fois2geojson(fois) {\n            var config_features = isArray(config.features) ? config.features : JSON.parse(config.features);\n            var features = [];\n            for (var i in fois) {\n                var foi = fois[i];\n                if (foi.geometry && (!config_features.length || isInArray(foi.identifier.value, config.features))) {\n                    if (!config.swap_axis) {\n                        foi.geometry.coordinates  = swap_axis(foi.geometry.coordinates);\n                    }\n                    var feature = {\n                        type: \"Feature\",\n                        geometry: foi.geometry,\n                        id: foi.identifier.value,\n                        properties: {\n                            name: foi.name ? foi.name.value : foi.identifier.value\n                        }\n                    };\n                    features.push(feature);\n                }\n            }\n            var featureCollection = {\n                type: \"FeatureCollection\",\n                features: features\n            };\n            return featureCollection;\n        }\n    }\n});\n\n\n//# sourceURL=webpack:///./src/js/widget/map.js?");

/***/ })

}]);