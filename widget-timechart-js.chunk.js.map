{"version":3,"sources":["webpack:///./node_modules/flot/source sync flot.*\\.js$","webpack:///./src/js/jQuery-globals.js","webpack:///./src/js/sos-data-access.js","webpack:///./src/js/widget/timechart.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAuB;;AAEvB,WAAW,6CAAC;AACZ,gBAAgB,6CAAC;AACF,4GAAC,EAAC;;;;;;;;;;;;;ACJjB;AAAA;AAAA;AACwB;;AAExB;AACA;AACA;;AAEe;AACf,EAAE,4CAAG;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,QAAQ,4CAAG;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4CAAG;AACP;;AAEA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;ACjHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC4C;AACZ;AACM;;AAEJ;;AAEE;AACM;AACD;AACR;AACY;;AAEc;;AAE3D,gBAAgB,6EAA0E;AAC1F;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,aAAa,mBAAmB;AACxE,oDAAoD,cAAc,oBAAoB,mBAAmB;AACzG;AACA;AACA;;AAEA;AACA,UAAU,sDAAM;AAChB,mBAAmB,sDAAM;AACzB,oBAAoB,iBAAiB;;AAErC;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,sDAAM;;AAEV;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB,IAAI,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,oBAAoB,oDAAE;AACtB,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,kDAAkD,YAAY;AAC9D,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA,mBAAmB,uDAAC;;AAEpB;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,gEAAU;AAC3B;AACA,GAAG;AACH;;AAEe,wEAAS,EAAC","file":"widget-timechart-js.chunk.js","sourcesContent":["var map = {\n\t\"./jquery.flot.axislabels.js\": \"./node_modules/flot/source/jquery.flot.axislabels.js\",\n\t\"./jquery.flot.browser.js\": \"./node_modules/flot/source/jquery.flot.browser.js\",\n\t\"./jquery.flot.categories.js\": \"./node_modules/flot/source/jquery.flot.categories.js\",\n\t\"./jquery.flot.composeImages.js\": \"./node_modules/flot/source/jquery.flot.composeImages.js\",\n\t\"./jquery.flot.crosshair.js\": \"./node_modules/flot/source/jquery.flot.crosshair.js\",\n\t\"./jquery.flot.drawSeries.js\": \"./node_modules/flot/source/jquery.flot.drawSeries.js\",\n\t\"./jquery.flot.errorbars.js\": \"./node_modules/flot/source/jquery.flot.errorbars.js\",\n\t\"./jquery.flot.fillbetween.js\": \"./node_modules/flot/source/jquery.flot.fillbetween.js\",\n\t\"./jquery.flot.flatdata.js\": \"./node_modules/flot/source/jquery.flot.flatdata.js\",\n\t\"./jquery.flot.hover.js\": \"./node_modules/flot/source/jquery.flot.hover.js\",\n\t\"./jquery.flot.image.js\": \"./node_modules/flot/source/jquery.flot.image.js\",\n\t\"./jquery.flot.js\": \"./node_modules/flot/source/jquery.flot.js\",\n\t\"./jquery.flot.legend.js\": \"./node_modules/flot/source/jquery.flot.legend.js\",\n\t\"./jquery.flot.logaxis.js\": \"./node_modules/flot/source/jquery.flot.logaxis.js\",\n\t\"./jquery.flot.navigate.js\": \"./node_modules/flot/source/jquery.flot.navigate.js\",\n\t\"./jquery.flot.pie.js\": \"./node_modules/flot/source/jquery.flot.pie.js\",\n\t\"./jquery.flot.resize.js\": \"./node_modules/flot/source/jquery.flot.resize.js\",\n\t\"./jquery.flot.saturated.js\": \"./node_modules/flot/source/jquery.flot.saturated.js\",\n\t\"./jquery.flot.selection.js\": \"./node_modules/flot/source/jquery.flot.selection.js\",\n\t\"./jquery.flot.stack.js\": \"./node_modules/flot/source/jquery.flot.stack.js\",\n\t\"./jquery.flot.symbol.js\": \"./node_modules/flot/source/jquery.flot.symbol.js\",\n\t\"./jquery.flot.threshold.js\": \"./node_modules/flot/source/jquery.flot.threshold.js\",\n\t\"./jquery.flot.time.js\": \"./node_modules/flot/source/jquery.flot.time.js\",\n\t\"./jquery.flot.touch.js\": \"./node_modules/flot/source/jquery.flot.touch.js\",\n\t\"./jquery.flot.touchNavigate.js\": \"./node_modules/flot/source/jquery.flot.touchNavigate.js\",\n\t\"./jquery.flot.uiConstants.js\": \"./node_modules/flot/source/jquery.flot.uiConstants.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/flot/source sync recursive flot.*\\\\.js$\";","import $ from 'jquery';\n\nwindow.$ = $;\nwindow.jQuery = $;\nexport default $;\n","/* eslint-disable no-nested-ternary, camelcase */\nimport SOS from './SOS';\n\nconst propertyNames = {};\nconst waitingDescribeResponse = {};\nconst propertyCallbackQueue = {};\n\nexport default (config, redraw, errorHandler) => {\n  SOS.setUrl(config.service);\n\n  function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n  }\n\n  function getPropertyName(procedure, id, callback, context) {\n    if (!propertyNames[procedure]) {\n      // Queue callback call\n      if (!propertyCallbackQueue[procedure]) {\n        propertyCallbackQueue[procedure] = [];\n      }\n\n      propertyCallbackQueue[procedure].push({\n        callback,\n        id,\n        context,\n      });\n\n      if (!waitingDescribeResponse[procedure]) {\n        waitingDescribeResponse[procedure] = true;\n        // Trigger a DescribeSensor, cache all property names for this procedure\n        SOS.describeSensor(procedure, (description) => {\n          let properties = Object.prototype.hasOwnProperty.call(description, 'ProcessModel')\n            ? description.ProcessModel.outputs.OutputList.output\n            : description.System.outputs.OutputList.output;\n          properties = properties instanceof Array ? properties : [properties];\n          const types = ['Quantity', 'Count', 'Boolean', 'Category', 'Text', 'ObservableProperty'];\n\n          const names = [];\n          Object.values(properties).forEach((property) => {\n            Object.values(types).forEach((type) => {\n              if (Object.prototype.hasOwnProperty.call(property, type)) {\n                // eslint-disable-next-line no-param-reassign\n                property.id = property[type].definition;\n              }\n            });\n            names[property.id] = property.name;\n          });\n          propertyNames[procedure] = names;\n\n          // Clear propertyCallbackQueue\n          while (propertyCallbackQueue[procedure].length) {\n            const elem = propertyCallbackQueue[procedure].shift();\n            elem.callback.call(undefined, propertyNames[procedure][elem.id], elem.context);\n          }\n        }, errorHandler);\n      }\n    } else {\n      callback(propertyNames[procedure][id], context);\n    }\n  }\n\n  function parse(observations) {\n    if (!observations.length) {\n      redraw([]);\n    }\n\n    // Get tabular data from observations\n    const data = [];\n\n    function addObservation(property, observation) {\n      const foi = observation.featureOfInterest;\n      data.push({\n        time: new Date(observation.resultTime),\n        value: Object.prototype.hasOwnProperty.call(observation.result, 'value') ? observation.result.value : observation.result,\n        feature: foi.name ? foi.name.value : (foi.identifier ? foi.identifier.value : foi),\n        property,\n        uom: Object.prototype.hasOwnProperty.call(observation.result, 'uom') ? observation.result.uom : '(N/A)',\n      });\n      if (data.length === observations.length) {\n        redraw(data);\n      }\n    }\n    Object.values(observations).forEach((observation) => {\n      getPropertyName(observation.procedure, observation.observableProperty,\n        addObservation, observation);\n    });\n  }\n\n  function read() {\n    const {\n      offering, feature, property, features, properties, time_start, time_end,\n    } = config;\n    const getFeatures = feature\n      ? [feature]\n      : isArray(features)\n        ? features\n        : features\n          ? JSON.parse(features)\n          : undefined;\n    const getProperties = property\n      ? [property]\n      : isArray(properties)\n        ? properties\n        : properties\n          ? JSON.parse(properties)\n          : undefined;\n    const time = (time_start && time_end) ? [time_start, time_end] : 'latest';\n    SOS.getObservation(offering, getFeatures, getProperties, time, parse, errorHandler);\n  }\n\n  return {\n    read,\n  };\n};\n","/* eslint-disable no-param-reassign */\nimport dataAccess from '../sos-data-access';\nimport ld from '../locale-date';\nimport common from '../widget-common';\n\nimport $ from '../jQuery-globals';\n\nimport 'flot/lib/jquery.mousewheel';\nimport 'flot/source/jquery.canvaswrapper';\nimport 'flot/source/jquery.colorhelpers';\nimport 'flot/source/jquery.flot';\nimport 'flot/source/jquery.flot.uiConstants';\n\nimport 'flot-plugins/dist/source/misc/jquery.flot.tooltip';\n\nconst flotReq = require.context('../../../node_modules/flot/source/', true, /flot.*\\.js$/);\nflotReq.keys().forEach(flotReq);\n\n// TODO readd legend\n// TODO readd pan and zoom\n\nconst template = [\n  '<div class=\"timechart widget\">',\n  '<h3 style=\"width:100%\"></h3>',\n  '<div class=\"graph\" style=\"height:75%; width: 100%; max-height: 380px;\"></div>',\n  '<div class=\"legend\" style=\"display: inline-block; float: right; margin-right: 15px; margin-left: 50px; margin-top: 10px\"></div>',\n  '<div><span class=\"footnote\"></span></div>',\n  '</div>',\n].join('');\n\nconst timechart = {\n  inputs: common.inputs.concat(['features', 'properties', 'time_start', 'time_end', 'title']),\n  optional_inputs: common.optional_inputs,\n  preferredSizes: [{ w: 650, h: 530 }],\n\n  init(config, el, errorHandler) {\n    // Render template\n    el.innerHTML = template;\n    el.querySelector('h3').innerHTML = config.title;\n    const graph = el.querySelector('.graph');\n\n    // load widget common features\n    common.init(config, el);\n\n    function redraw(data) {\n      const series = {};\n      Object.keys(data).forEach((i) => {\n        const measure = data[i];\n        const label = `${measure.property} (${measure.feature})`;\n        if (!series[label]) {\n          series[label] = {\n            data: [],\n            label,\n          };\n        }\n        series[label].data.push([measure.time.getTime() / 1000, measure.value]);\n      });\n\n      // Sort data by time, convert to array\n      const arr = [];\n      Object.keys(series).forEach((k) => {\n        series[k].data.sort((a, b) => b[0] - a[0]);\n        arr.push(series[k]);\n      });\n\n      const options = {\n        xaxis: {\n          mode: 'time',\n          timezone: ld.utc() ? 'UTC' : 'browser',\n        },\n        yaxis: {\n          zoomRange: false,\n          panRange: false,\n        },\n        grid: {\n          hoverable: true,\n        },\n        legend: {\n          container: el.querySelector('.legend'),\n        },\n        series: {\n          lines: {\n            show: true,\n          },\n          points: {\n            show: true,\n          },\n        },\n        tooltip: true,\n        tooltipOpts: {\n          content: data.length ? `[%x] %s: %y.2 ${data[0].uom}` : '',\n        },\n        zoom: {\n          interactive: true,\n        },\n        pan: {\n          interactive: true,\n        },\n      };\n\n      if (config.colors) {\n        options.colors = config.colors;\n      }\n\n      const plot = $.plot(graph, arr, options);\n\n      if (config.callback) {\n        config.callback(plot, graph);\n      }\n    }\n\n    // Setup SOS data access\n    const data = dataAccess(config, redraw, errorHandler);\n    data.read();\n  },\n};\n\nexport default timechart;\n"],"sourceRoot":""}