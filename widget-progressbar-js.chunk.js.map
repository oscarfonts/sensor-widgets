{"version":3,"sources":["webpack:///./src/js/sos-data-access.js","webpack:///./src/js/widget/progressbar.css?0eb9","webpack:///./src/js/widget/progressbar.css","webpack:///./src/js/widget/progressbar.js"],"names":["propertyNames","waitingDescribeResponse","propertyCallbackQueue","parse","observations","length","redraw","data","addObservation","property","observation","foi","featureOfInterest","push","time","Date","resultTime","value","Object","prototype","hasOwnProperty","call","result","feature","name","identifier","uom","values","forEach","procedure","id","callback","context","observableProperty","describeSensor","description","properties","ProcessModel","outputs","OutputList","output","System","Array","types","names","type","definition","elem","shift","undefined","errorHandler","setUrl","config","service","read","offering","features","time_start","time_end","getFeatures","JSON","getProperties","getObservation","api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_EXPORT___","template","join","inputs","concat","optional_inputs","preferredSizes","w","h","el","innerHTML","querySelector","min_value","max_value","init","measure","display","width","offsetWidth","style","refreshIntervalId","setInterval","refresh_interval","clearInterval"],"mappings":"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","file":"widget-progressbar-js.chunk.js","sourcesContent":["/* eslint-disable no-nested-ternary, camelcase */\nimport SOS, { isArray } from './SOS';\n\nconst propertyNames = {};\nconst waitingDescribeResponse = {};\nconst propertyCallbackQueue = {};\n\nexport default (config, redraw, errorHandler) => {\n  SOS.setUrl(config.service);\n\n  function getPropertyName(procedure, id, callback, context) {\n    if (!propertyNames[procedure]) {\n      // Queue callback call\n      if (!propertyCallbackQueue[procedure]) {\n        propertyCallbackQueue[procedure] = [];\n      }\n\n      propertyCallbackQueue[procedure].push({\n        callback,\n        id,\n        context,\n      });\n\n      if (!waitingDescribeResponse[procedure]) {\n        waitingDescribeResponse[procedure] = true;\n        // Trigger a DescribeSensor, cache all property names for this procedure\n        SOS.describeSensor(procedure, (description) => {\n          let properties = Object.prototype.hasOwnProperty.call(description, 'ProcessModel')\n            ? description.ProcessModel.outputs.OutputList.output\n            : description.System.outputs.OutputList.output;\n          properties = properties instanceof Array ? properties : [properties];\n          const types = ['Quantity', 'Count', 'Boolean', 'Category', 'Text', 'ObservableProperty'];\n\n          const names = [];\n          Object.values(properties).forEach((property) => {\n            Object.values(types).forEach((type) => {\n              if (Object.prototype.hasOwnProperty.call(property, type)) {\n                // eslint-disable-next-line no-param-reassign\n                property.id = property[type].definition;\n              }\n            });\n            names[property.id] = property.name;\n          });\n          propertyNames[procedure] = names;\n\n          // Clear propertyCallbackQueue\n          while (propertyCallbackQueue[procedure].length) {\n            const elem = propertyCallbackQueue[procedure].shift();\n            elem.callback.call(undefined, propertyNames[procedure][elem.id], elem.context);\n          }\n        }, errorHandler);\n      }\n    } else {\n      callback(propertyNames[procedure][id], context);\n    }\n  }\n\n  function parse(observations) {\n    if (!observations.length) {\n      redraw([]);\n    }\n\n    // Get tabular data from observations\n    const data = [];\n\n    function addObservation(property, observation) {\n      const foi = observation.featureOfInterest;\n      data.push({\n        time: new Date(observation.resultTime),\n        value: Object.prototype.hasOwnProperty.call(observation.result, 'value') ? observation.result.value : observation.result,\n        feature: foi.name ? foi.name.value : (foi.identifier ? foi.identifier.value : foi),\n        property,\n        uom: Object.prototype.hasOwnProperty.call(observation.result, 'uom') ? observation.result.uom : '(N/A)',\n      });\n      if (data.length === observations.length) {\n        redraw(data);\n      }\n    }\n    Object.values(observations).forEach((observation) => {\n      getPropertyName(observation.procedure, observation.observableProperty,\n        addObservation, observation);\n    });\n  }\n\n  function read() {\n    const {\n      offering, feature, property, features, properties, time_start, time_end,\n    } = config;\n    const getFeatures = feature\n      ? [feature]\n      : isArray(features)\n        ? features\n        : features\n          ? JSON.parse(features)\n          : undefined;\n    const getProperties = property\n      ? [property]\n      : isArray(properties)\n        ? properties\n        : properties\n          ? JSON.parse(properties)\n          : undefined;\n    const time = (time_start && time_end) ? [time_start, time_end] : 'latest';\n    SOS.getObservation(offering, getFeatures, getProperties, time, parse, errorHandler);\n  }\n\n  return {\n    read,\n  };\n};\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!./progressbar.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".progressbar.widget .progress {\\n    height: 85px;\\n    width: 90%;\\n    margin: 0 auto;\\n    padding-left: 12px;\\n    padding-right: 12px;\\n}\\n\\n.progressbar.widget .background-bar {\\n    text-align: left;\\n    margin-top: 30px;\\n    background: #e9e5e2;\\n    background-image: -webkit-gradient(linear, left top, left bottom, from(#e1ddd9), to(#e9e5e2));\\n    background-image: -webkit-linear-gradient(top, #e1ddd9, #e9e5e2);\\n    background-image: -moz-linear-gradient(top, #e1ddd9, #e9e5e2);\\n    background-image: -ms-linear-gradient(top, #e1ddd9, #e9e5e2);\\n    background-image: -o-linear-gradient(top, #e1ddd9, #e9e5e2);\\n    background-image: linear-gradient(top, #e1ddd9, #e9e5e2);\\n    height: 20px;\\n    border-radius: 10px;\\n    -moz-box-shadow: 0 1px 0 #bebbb9 inset, 0 1px 0 #fcfcfc;\\n    -webkit-box-shadow: 0 1px 0 #bebbb9 inset, 0 1px 0 #fcfcfc;\\n    box-shadow: 0 1px 0 #bebbb9 inset, 0 1px 0 #fcfcfc;\\n}\\n.progressbar.widget .bar {\\n    width: 10px;\\n    height: 18px;\\n    position: absolute;\\n    border-radius: 10px;\\n    -moz-box-shadow: 0 1px 0 #fcfcfc inset, 0 1px 0 #bebbb9;\\n    -webkit-box-shadow: 0 1px 0 #fcfcfc inset, 0 1px 0 #bebbb9;\\n    box-shadow: 0 1px 0 #fcfcfc inset, 0 1px 0 #bebbb9;\\n}\\n.progressbar.widget .min {\\n    position: relative;\\n    top: -20px;\\n    float: left;\\n    width: 0;\\n}\\n.progressbar.widget .max {\\n    position: relative;\\n    top: -20px;\\n    float: right;\\n}\\n.progressbar.widget .value {\\n    position: relative;\\n    top: 25px;\\n    text-align: right;\\n}\\n.progressbar.widget .pink {\\n    background-color: #f674a4;\\n    background-image: -webkit-gradient(linear, left top, left bottom, from(#f674a4), to(#e06995));\\n    background-image: -webkit-linear-gradient(top, #f674a4, #e06995);\\n    background-image: -moz-linear-gradient(top, #f674a4, #e06995);\\n    background-image: -ms-linear-gradient(top, #f674a4, #e06995);\\n    background-image: -o-linear-gradient(top, #f674a4, #e06995);\\n    background-image: linear-gradient(top, #f674a4, #e06995);\\n}\\n.progressbar.widget .yellow {\\n    background-color: #f0bb4b;\\n    background-image: -webkit-gradient(linear, left top, left bottom, from(#f0bb4b), to(#d9aa44));\\n    background-image: -webkit-linear-gradient(top, #f0bb4b, #d9aa44);\\n    background-image: -moz-linear-gradient(top, #f0bb4b, #d9aa44);\\n    background-image: -ms-linear-gradient(top, #f0bb4b, #d9aa44);\\n    background-image: -o-linear-gradient(top, #f0bb4b, #d9aa44);\\n    background-image: linear-gradient(top, #f0bb4b, #d9aa44);\\n}\\n.progressbar.widget .green {\\n    background-color: #a1ce5b;\\n    background-image: -webkit-gradient(linear, left top, left bottom, from(#a1ce5b), to(#91ba52));\\n    background-image: -webkit-linear-gradient(top, #a1ce5b, #91ba52);\\n    background-image: -moz-linear-gradient(top, #a1ce5b, #91ba52);\\n    background-image: -ms-linear-gradient(top, #a1ce5b, #91ba52);\\n    background-image: -o-linear-gradient(top, #a1ce5b, #91ba52);\\n    background-image: linear-gradient(top, #a1ce5b, #91ba52);\\n}\\n.progressbar.widget .blue {\\n    background-color: #66b3cc;\\n    background-image: -webkit-gradient(linear, left top, left bottom, from(#66b3cc), to(#5da3ba));\\n    background-image: -webkit-linear-gradient(top, #66b3cc, #5da3ba);\\n    background-image: -moz-linear-gradient(top, #66b3cc, #5da3ba);\\n    background-image: -ms-linear-gradient(top, #66b3cc, #5da3ba);\\n    background-image: -o-linear-gradient(top, #66b3cc, #5da3ba);\\n    background-image: linear-gradient(top, #66b3cc, #5da3ba);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://src/js/widget/progressbar.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,YAAY;IACZ,UAAU;IACV,cAAc;IACd,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,mBAAmB;IACnB,6FAA6F;IAC7F,gEAAgE;IAChE,6DAA6D;IAC7D,4DAA4D;IAC5D,2DAA2D;IAC3D,wDAAwD;IACxD,YAAY;IACZ,mBAAmB;IACnB,uDAAuD;IACvD,0DAA0D;IAC1D,kDAAkD;AACtD;AACA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,uDAAuD;IACvD,0DAA0D;IAC1D,kDAAkD;AACtD;AACA;IACI,kBAAkB;IAClB,UAAU;IACV,WAAW;IACX,QAAQ;AACZ;AACA;IACI,kBAAkB;IAClB,UAAU;IACV,YAAY;AAChB;AACA;IACI,kBAAkB;IAClB,SAAS;IACT,iBAAiB;AACrB;AACA;IACI,yBAAyB;IACzB,6FAA6F;IAC7F,gEAAgE;IAChE,6DAA6D;IAC7D,4DAA4D;IAC5D,2DAA2D;IAC3D,wDAAwD;AAC5D;AACA;IACI,yBAAyB;IACzB,6FAA6F;IAC7F,gEAAgE;IAChE,6DAA6D;IAC7D,4DAA4D;IAC5D,2DAA2D;IAC3D,wDAAwD;AAC5D;AACA;IACI,yBAAyB;IACzB,6FAA6F;IAC7F,gEAAgE;IAChE,6DAA6D;IAC7D,4DAA4D;IAC5D,2DAA2D;IAC3D,wDAAwD;AAC5D;AACA;IACI,yBAAyB;IACzB,6FAA6F;IAC7F,gEAAgE;IAChE,6DAA6D;IAC7D,4DAA4D;IAC5D,2DAA2D;IAC3D,wDAAwD;AAC5D\",\"sourcesContent\":[\".progressbar.widget .progress {\\n    height: 85px;\\n    width: 90%;\\n    margin: 0 auto;\\n    padding-left: 12px;\\n    padding-right: 12px;\\n}\\n\\n.progressbar.widget .background-bar {\\n    text-align: left;\\n    margin-top: 30px;\\n    background: #e9e5e2;\\n    background-image: -webkit-gradient(linear, left top, left bottom, from(#e1ddd9), to(#e9e5e2));\\n    background-image: -webkit-linear-gradient(top, #e1ddd9, #e9e5e2);\\n    background-image: -moz-linear-gradient(top, #e1ddd9, #e9e5e2);\\n    background-image: -ms-linear-gradient(top, #e1ddd9, #e9e5e2);\\n    background-image: -o-linear-gradient(top, #e1ddd9, #e9e5e2);\\n    background-image: linear-gradient(top, #e1ddd9, #e9e5e2);\\n    height: 20px;\\n    border-radius: 10px;\\n    -moz-box-shadow: 0 1px 0 #bebbb9 inset, 0 1px 0 #fcfcfc;\\n    -webkit-box-shadow: 0 1px 0 #bebbb9 inset, 0 1px 0 #fcfcfc;\\n    box-shadow: 0 1px 0 #bebbb9 inset, 0 1px 0 #fcfcfc;\\n}\\n.progressbar.widget .bar {\\n    width: 10px;\\n    height: 18px;\\n    position: absolute;\\n    border-radius: 10px;\\n    -moz-box-shadow: 0 1px 0 #fcfcfc inset, 0 1px 0 #bebbb9;\\n    -webkit-box-shadow: 0 1px 0 #fcfcfc inset, 0 1px 0 #bebbb9;\\n    box-shadow: 0 1px 0 #fcfcfc inset, 0 1px 0 #bebbb9;\\n}\\n.progressbar.widget .min {\\n    position: relative;\\n    top: -20px;\\n    float: left;\\n    width: 0;\\n}\\n.progressbar.widget .max {\\n    position: relative;\\n    top: -20px;\\n    float: right;\\n}\\n.progressbar.widget .value {\\n    position: relative;\\n    top: 25px;\\n    text-align: right;\\n}\\n.progressbar.widget .pink {\\n    background-color: #f674a4;\\n    background-image: -webkit-gradient(linear, left top, left bottom, from(#f674a4), to(#e06995));\\n    background-image: -webkit-linear-gradient(top, #f674a4, #e06995);\\n    background-image: -moz-linear-gradient(top, #f674a4, #e06995);\\n    background-image: -ms-linear-gradient(top, #f674a4, #e06995);\\n    background-image: -o-linear-gradient(top, #f674a4, #e06995);\\n    background-image: linear-gradient(top, #f674a4, #e06995);\\n}\\n.progressbar.widget .yellow {\\n    background-color: #f0bb4b;\\n    background-image: -webkit-gradient(linear, left top, left bottom, from(#f0bb4b), to(#d9aa44));\\n    background-image: -webkit-linear-gradient(top, #f0bb4b, #d9aa44);\\n    background-image: -moz-linear-gradient(top, #f0bb4b, #d9aa44);\\n    background-image: -ms-linear-gradient(top, #f0bb4b, #d9aa44);\\n    background-image: -o-linear-gradient(top, #f0bb4b, #d9aa44);\\n    background-image: linear-gradient(top, #f0bb4b, #d9aa44);\\n}\\n.progressbar.widget .green {\\n    background-color: #a1ce5b;\\n    background-image: -webkit-gradient(linear, left top, left bottom, from(#a1ce5b), to(#91ba52));\\n    background-image: -webkit-linear-gradient(top, #a1ce5b, #91ba52);\\n    background-image: -moz-linear-gradient(top, #a1ce5b, #91ba52);\\n    background-image: -ms-linear-gradient(top, #a1ce5b, #91ba52);\\n    background-image: -o-linear-gradient(top, #a1ce5b, #91ba52);\\n    background-image: linear-gradient(top, #a1ce5b, #91ba52);\\n}\\n.progressbar.widget .blue {\\n    background-color: #66b3cc;\\n    background-image: -webkit-gradient(linear, left top, left bottom, from(#66b3cc), to(#5da3ba));\\n    background-image: -webkit-linear-gradient(top, #66b3cc, #5da3ba);\\n    background-image: -moz-linear-gradient(top, #66b3cc, #5da3ba);\\n    background-image: -ms-linear-gradient(top, #66b3cc, #5da3ba);\\n    background-image: -o-linear-gradient(top, #66b3cc, #5da3ba);\\n    background-image: linear-gradient(top, #66b3cc, #5da3ba);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/* eslint-disable no-param-reassign */\nimport './progressbar.css';\n\nimport dataAccess from '../sos-data-access';\nimport ld from '../locale-date';\nimport common from '../widget-common';\n\nconst template = [\n  '<div class=\"progressbar widget\">',\n  '<h1 class=\"feature\"></h1>',\n  '<h3 class=\"property\"></h3>',\n  '<div class=\"progress\">',\n  '<div class=\"min\">0</div>',\n  '<div class=\"max\">100</div>',\n  '<div class=\"background-bar\">',\n  '<span class=\"green bar\">',\n  '<div class=\"value\"></div>',\n  '</span>',\n  '</div>',\n  '</div>',\n  '<h3 class=\"date\"></h3>',\n  '<div><span class=\"footnote\"></span></div>',\n  '</div>',\n].join('');\n\nexport default {\n  inputs: common.inputs.concat(['feature', 'property', 'refresh_interval', 'min_value', 'max_value']),\n  optional_inputs: common.optional_inputs,\n  preferredSizes: [{ w: 500, h: 220 }],\n\n  init(config, el, errorHandler) {\n    // Render template\n    el.innerHTML = template;\n    el.querySelector('.min').innerHTML = config.min_value;\n    el.querySelector('.max').innerHTML = config.max_value;\n\n    // load widget common features\n    common.init(config, el);\n\n    // Update view\n    function redraw(data) {\n      const measure = data[0];\n      el.querySelector('.date').innerHTML = ld.display(measure.time);\n      el.querySelector('.value').innerHTML = `${measure.value} ${measure.uom}`;\n      el.querySelector('.feature').innerHTML = measure.feature;\n      el.querySelector('.property').innerHTML = measure.property;\n\n      const fullspan = el.querySelector('.background-bar').offsetWidth;\n      const proportion = (measure.value - config.min_value) / (config.max_value - config.min_value);\n      const width = fullspan * proportion;\n\n      el.querySelector('.bar').style.width = `${width}px`;\n    }\n\n    // Setup SOS data access\n    const data = dataAccess(config, redraw, errorHandler);\n    const refreshIntervalId = setInterval(data.read, config.refresh_interval * 1000);\n    data.read();\n\n    return {\n      destroy() {\n        clearInterval(refreshIntervalId);\n      },\n    };\n  },\n};\n"],"sourceRoot":""}