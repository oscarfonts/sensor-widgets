{"version":3,"sources":["webpack:///./src/js/sos-data-access.js","webpack:///./src/js/widget/windrose.js"],"names":["propertyNames","waitingDescribeResponse","propertyCallbackQueue","parse","observations","length","redraw","data","addObservation","property","observation","foi","featureOfInterest","push","time","Date","resultTime","value","Object","prototype","hasOwnProperty","call","result","feature","name","identifier","uom","values","forEach","procedure","id","callback","context","observableProperty","describeSensor","description","properties","ProcessModel","outputs","OutputList","output","System","Array","types","names","type","definition","elem","shift","undefined","errorHandler","setUrl","config","service","read","offering","features","time_start","time_end","getFeatures","JSON","getProperties","getObservation","labels","inputs","concat","optional_inputs","preferredSizes","w","h","el","mainDiv","document","createElement","className","chart","appendChild","footnoteDiv","footnoteSpan","init","arr","keys","i","measure","timestamp","getTime","magnitude","slots","dirs","n","speed","Math","min","floor","direction","round","series","total","j","Chart","polar","renderTo","title","text","subtitle","pane","size","legend","align","verticalAlign","y","layout","xAxis","tickmarkPlacement","categories","yAxis","endOnTick","showLastLabel","this","tooltip","color","numberFormat","plotOptions","stacking","shadow","groupPadding","pointPlacement","colors","refreshIntervalId","setInterval","refresh_interval","clearInterval"],"mappings":"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","file":"widget-windrose-js.chunk.js","sourcesContent":["/* eslint-disable no-nested-ternary, camelcase */\nimport SOS, { isArray } from './SOS';\n\nconst propertyNames = {};\nconst waitingDescribeResponse = {};\nconst propertyCallbackQueue = {};\n\nexport default (config, redraw, errorHandler) => {\n  SOS.setUrl(config.service);\n\n  function getPropertyName(procedure, id, callback, context) {\n    if (!propertyNames[procedure]) {\n      // Queue callback call\n      if (!propertyCallbackQueue[procedure]) {\n        propertyCallbackQueue[procedure] = [];\n      }\n\n      propertyCallbackQueue[procedure].push({\n        callback,\n        id,\n        context,\n      });\n\n      if (!waitingDescribeResponse[procedure]) {\n        waitingDescribeResponse[procedure] = true;\n        // Trigger a DescribeSensor, cache all property names for this procedure\n        SOS.describeSensor(procedure, (description) => {\n          let properties = Object.prototype.hasOwnProperty.call(description, 'ProcessModel')\n            ? description.ProcessModel.outputs.OutputList.output\n            : description.System.outputs.OutputList.output;\n          properties = properties instanceof Array ? properties : [properties];\n          const types = ['Quantity', 'Count', 'Boolean', 'Category', 'Text', 'ObservableProperty'];\n\n          const names = [];\n          Object.values(properties).forEach((property) => {\n            Object.values(types).forEach((type) => {\n              if (Object.prototype.hasOwnProperty.call(property, type)) {\n                // eslint-disable-next-line no-param-reassign\n                property.id = property[type].definition;\n              }\n            });\n            names[property.id] = property.name;\n          });\n          propertyNames[procedure] = names;\n\n          // Clear propertyCallbackQueue\n          while (propertyCallbackQueue[procedure].length) {\n            const elem = propertyCallbackQueue[procedure].shift();\n            elem.callback.call(undefined, propertyNames[procedure][elem.id], elem.context);\n          }\n        }, errorHandler);\n      }\n    } else {\n      callback(propertyNames[procedure][id], context);\n    }\n  }\n\n  function parse(observations) {\n    if (!observations.length) {\n      redraw([]);\n    }\n\n    // Get tabular data from observations\n    const data = [];\n\n    function addObservation(property, observation) {\n      const foi = observation.featureOfInterest;\n      data.push({\n        time: new Date(observation.resultTime),\n        value: Object.prototype.hasOwnProperty.call(observation.result, 'value') ? observation.result.value : observation.result,\n        feature: foi.name ? foi.name.value : (foi.identifier ? foi.identifier.value : foi),\n        property,\n        uom: Object.prototype.hasOwnProperty.call(observation.result, 'uom') ? observation.result.uom : '(N/A)',\n      });\n      if (data.length === observations.length) {\n        redraw(data);\n      }\n    }\n    Object.values(observations).forEach((observation) => {\n      getPropertyName(observation.procedure, observation.observableProperty,\n        addObservation, observation);\n    });\n  }\n\n  function read() {\n    const {\n      offering, feature, property, features, properties, time_start, time_end,\n    } = config;\n    const getFeatures = feature\n      ? [feature]\n      : isArray(features)\n        ? features\n        : features\n          ? JSON.parse(features)\n          : undefined;\n    const getProperties = property\n      ? [property]\n      : isArray(properties)\n        ? properties\n        : properties\n          ? JSON.parse(properties)\n          : undefined;\n    const time = (time_start && time_end) ? [time_start, time_end] : 'latest';\n    SOS.getObservation(offering, getFeatures, getProperties, time, parse, errorHandler);\n  }\n\n  return {\n    read,\n  };\n};\n","/* eslint-disable no-param-reassign */\nimport Highcharts from 'highcharts';\nimport addMore from 'highcharts/highcharts-more';\nimport dataAccess from '../sos-data-access';\nimport common from '../widget-common';\n\naddMore(Highcharts);\n\nconst labels = ['&gt; 10 m/s', '8-10 m/s', '6-8 m/s', '4-6 m/s', '2-4 m/s', '0-2 m/s'];\n\nexport default {\n  inputs: common.inputs.concat(['feature', 'properties', 'time_start', 'time_end', 'refresh_interval', 'title']),\n  optional_inputs: ['subtitle'].concat(common.optional_inputs),\n  preferredSizes: [{ w: 620, h: 450 }],\n\n  init(config, el, errorHandler) {\n    // Main div\n    const mainDiv = document.createElement('div');\n    mainDiv.className = 'windrose widget';\n\n    // Chart div\n    const chart = document.createElement('div');\n    mainDiv.appendChild(chart);\n\n    // Add footnote element\n    const footnoteDiv = document.createElement('div');\n    const footnoteSpan = document.createElement('span');\n    footnoteSpan.className = 'footnote';\n    footnoteDiv.appendChild(footnoteSpan);\n    mainDiv.appendChild(footnoteDiv);\n\n    el.appendChild(mainDiv);\n\n    // load widget common features\n    common.init(config, el, errorHandler);\n\n    function redraw(data) {\n      const arr = [];\n      Object.keys(data).forEach((i) => {\n        const measure = data[i];\n\n        // Build a sparse array where index is timestamp, and member is a 2-element array\n        // First element is wind speed, second element is wind direction\n        const timestamp = measure.time.getTime();\n        const magnitude = measure.uom === 'º' ? 1 : 0;\n\n        if (!arr[timestamp]) {\n          arr[timestamp] = [];\n        }\n        arr[timestamp][magnitude] = measure.value;\n      });\n\n      // Build a matrix where first index is speed range, and second is direction\n      const slots = [];\n      while (slots.length < 6) {\n        const dirs = [];\n        while (dirs.push(null) < 16) {\n          // do nothing\n        }\n        slots.push(dirs);\n      }\n\n      // Sum the number of observations for each speed+direction slot\n      let n = 0;\n      Object.keys(arr).forEach((i) => {\n        const values = arr[i];\n        if (values.length === 2) {\n          const speed = 5 - Math.min(Math.floor(values[0] / 2), 5); // Speed slot - from 0 to 5\n          const direction = Math.round(values[1] / 22.5) % 16; // Direction slot - from 0 to 15\n          if (!slots[speed][direction]) {\n            slots[speed][direction] = 1;\n          } else {\n            slots[speed][direction] += 1;\n          }\n          n += 1;\n        }\n      });\n\n      // Convert from sample count to percentage\n      // Generate legend\n      const series = [];\n      Object.keys(slots).forEach((i) => {\n        let total = 0;\n        Object.keys(slots[i]).forEach((j) => {\n          slots[i][j] = (slots[i][j] * 100) / n;\n          total += slots[i][j];\n        });\n        series.push({\n          name: `${labels[i]} (${Math.round(total)}%)`,\n          data: slots[i],\n        });\n      });\n\n      // Finally, generate the chart\n      // eslint-disable-next-line no-new\n      new Highcharts.Chart({\n        chart: {\n          type: 'column',\n          polar: true,\n          renderTo: chart,\n        },\n        title: {\n          text: config.title,\n        },\n        subtitle: {\n          text: config.subtitle,\n        },\n        pane: {\n          size: '85%',\n        },\n        legend: {\n          align: 'right',\n          verticalAlign: 'top',\n          y: 100,\n          layout: 'vertical',\n        },\n        xAxis: {\n          tickmarkPlacement: 'on',\n          categories: ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW'],\n        },\n        yAxis: {\n          min: 0,\n          endOnTick: false,\n          showLastLabel: true,\n          labels: {\n            formatter() {\n              return `${this.value} %`;\n            },\n          },\n        },\n        tooltip: {\n          formatter() {\n            return `<span style=\"color:${this.series.color}\">\\u25CF</span> ${this.series.name}: <b>${Highcharts.numberFormat(this.y, 1)} %</b><br/>`;\n          },\n        },\n        plotOptions: {\n          series: {\n            stacking: 'normal',\n            shadow: false,\n            groupPadding: 0,\n            pointPlacement: 'on',\n          },\n        },\n        colors: ['#BD0BC9', '#C9170B', '#C9760B', '#BDC90B', '#0BC917', '#0BBDC9'],\n        series,\n      });\n    }\n\n    // Setup SOS data access\n    const data = dataAccess(config, redraw);\n    const refreshIntervalId = setInterval(data.read, config.refresh_interval * 1000);\n    data.read();\n\n    return {\n      destroy() {\n        clearInterval(refreshIntervalId);\n      },\n    };\n  },\n};\n"],"sourceRoot":""}